// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @unique @default(cuid())
  username String  @unique
  password String  
  avatarId String?
  avatar   Avatar? @relation(fields: [avatarId], references: [id])
  role     Role
  spaces   Space[]
  maps     Map[]

}

model Space {
  id        String  @id @unique @default(cuid())
  name      String
  width     Int
  height    Int
  thumbnail String?
  mapId     String?
  map       Map?    @relation(fields: [mapId], references: [id])
  elements  spaceElements[]
  user User @relation(fields: [userId], references: [id])
  userId String

}

model spaceElements {
  id        String @id @unique @default(cuid())
  elementId String
  space     Space @relation(fields: [spaceId], references: [id])
  element   Element @relation(fields: [elementId], references: [id])
  spaceId   String
  x         Int
  y         Int
}

model Element {
  id       String @id @unique @default(cuid())
  width    Int
  height   Int
  imageUrl String
  static   Boolean
  spaces   spaceElements[]
}

model Map {
  id     String  @id @unique @default(cuid())
  width  Int
  height Int
  thumbnailImageUrl String?
  name   String
  user   User @relation(fields: [userId], references: [id])
  userId String
  spaces Space[]
  elements mapElements[]
}

model mapElements {
  id        String  @id @unique @default(cuid())
  mapId     String
  elementId String?
  map       Map     @relation(fields: [mapId], references: [id])
  x         Int?
  y         Int?
}

model Avatar {
  id       String  @id @unique @default(cuid())
  imageUrl String?
  name     String?
  user     User[] 
}

enum Role {
  Admin
  User
}